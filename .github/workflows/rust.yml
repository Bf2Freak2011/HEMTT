name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable
          rustup component add clippy rustfmt

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: rustfmt
        run: cargo fmt -- --check

  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: cargo build --all --release

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: linux
          path: target/release/hemtt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}

  build-macos:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: cargo build --all --release

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: macos
          path: target/release/hemtt

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    env:
      OPENSSL_DIR: C:\Program Files\OpenSSL-Win64
    steps:
      - name: Checkout the source code
        uses: actions/checkout@master

      - name: Install OpenSSL
        run: choco install --no-progress openssl

      - name: Install Rust stable
        run: |
          rustup toolchain update stable --no-self-update
          rustup default stable

      - name: Build
        run: cargo build --all

      - name: Test
        run: cargo test --all

      - name: Build (Release)
        run: cargo build --all --release

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: windows
          path: target/release/hemtt.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/hemtt
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCKER_TOKEN }}
